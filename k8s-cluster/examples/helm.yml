---
- hosts: k8s-master
  become: yes

  tasks:
    - name: Create Tiller ServiceAccount
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: tiller
            namespace: kube-system

    - name: Apply tiller RBAC definition.
      k8s:
        state: present
        definition: "{{ lookup('file', 'files/tiller-rbac.yml') | from_\
          yaml }}"

    - name: Install apache apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: Add an Apt signing key, uses whichever key is at the URL
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present

    - name: Add specified repository into sources list using specified filename
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: helm

    - name: Update repositories cache and install "helm" package
      apt:
        name: helm2
        update_cache: yes

    - name: Set up Helm and Tiller.
      command: helm init --service-account tiller
      register: helm_init_result
      changed_when: "'already installed' not in helm_init_result.stdout"

    - name: Get Tiller's ClusterIP.
      k8s:
        api_version: v1
        kind: Service
        name: tiller-deploy
        namespace: kube-system
      register: tiller_service

    - name: Set the Helm host and port.
      set_fact:
        helm_host: "{{ tiller_service.result.spec.clusterIP }}"
        helm_port: "{{ tiller_service.result.spec.ports[0].port }}"

    # - name: Wait for Tiller to become responsive.
    #   wait_for:
    #     host: "{{ helm_host }}"
    #     port: "{{ helm_port }}"
    #     state: started

    - name: List installed Helm charts.
      command: helm list
      environment:
        HELM_HOST: "{{ helm_host }}:{{ helm_port }}"
      register: helm_list_results
      changed_when: False

    - name: Install phpMyAdmin with Helm.
      command: >
        helm install --name phpmyadmin stable/phpmyadmin
        --set service.type=NodePort
      environment:
        HELM_HOST: "{{ helm_host }}:{{ helm_port }}"
      when: "'phpmyadmin' not in helm_list_results.stdout"

    - name: Get the details of the phpmyadmin Service.
      k8s:
        api_version: v1
        kind: Service
        name: phpmyadmin
        namespace: default
      register: phpmyadmin_service

    - name: Print the NodePort of the phpmyadmin Service.
      debug:
        var: phpmyadmin_service.result.spec.ports[0].nodePort
